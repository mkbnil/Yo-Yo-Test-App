@page "/"


@code {
    YoYoService yoyoService = new YoYoService();

    double strockDashOffSet = 565.2;


    TimeSpan nextShuttle = new TimeSpan(0, 0, 0);
    public async Task StartTimer()
    {
        strockDashOffSet = 565.2;
        double progress = 0;
        yoyoService.IsProcessStarted = true;
        nextShuttle = yoyoService.ShuttleLength;
        while (nextShuttle != new TimeSpan(0, 0, 0))
        {
            await Task.Delay(1000);
            nextShuttle = nextShuttle.Subtract(TimeSpan.FromSeconds(1));
            progress = progress + 1;
            HandleProgress(progress);
            StateHasChanged();
        }
        yoyoService.OneShuttleCompleted(yoyoService.ShuttleLength);
        StateHasChanged();
        nextShuttle = yoyoService.ShuttleLength;
        await StartTimer();
    }


    public void HandleProgress(double val)
    {
        var r = 90;
        var c = Math.PI * (r * 2);

        if (val < 0)
        {
            val = 0;
        }
        if (val > 100)
        {
            val = 100;
        }

        var pct = ((100 - val) / 100) * c;
        strockDashOffSet = pct;
    }
}

<div class="container">
    <div class="row">
        <div class="col-sm-12">
            <div class="row d-sm-block text-center">
                <h4>YoYo Test</h4>
            </div>
            <div class="row">
                @if (!yoyoService.IsProcessStarted)
                {
                    <div class="athlete-div-play-continer" @onclick="(e=> StartTimer())">
                        <img src="/images/play-button.png" class="athlete-img-play" />
                    </div>
                }
                else
                {

                    <div id="cont">
                        <svg id="svg" width="200" height="200" viewPort="0 0 100 100">
                            <text x="50%" y="50%" text-anchor="middle" stroke="#343a40" stroke-width="1px" dy=".3em">
                                <tspan x="100" dy="-20">Level @yoyoService.Level</tspan>
                                <tspan x="100" dy="20">Shuttle @yoyoService.Shuttle</tspan>
                                <tspan x="100" dy="25">@yoyoService.ShuttleSpeed km/h</tspan>
                            </text>
                            <circle r="90" cx="100" cy="100" fill="transparent" stroke-dasharray="565.48" stroke-dashoffset="0"></circle>
                            <circle id="bar" r="90" cx="100" cy="100" fill="transparent" stroke-dasharray="565.48" style="stroke-dashoffset: @strockDashOffSet;"></circle>
                        </svg>
                    </div>
                }
            </div>
            <div class="row">
                <table class="table athlete-table-with-header">
                    <thead>
                        <tr>
                            <td>
                                <label>Next Shuttle</label>
                            </td>
                            <td>
                                <label>Total Time</label>
                            </td>
                            <td>
                                <label>Total Distance</label>
                            </td>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <td>@nextShuttle.ToString(@"mm\:ss") S</td>
                            <td class="athlete-add-border-rl">@yoyoService.TotalTime.ToString(@"mm\:ss") M</td>
                            <td>@yoyoService.TotalDistance M</td>
                            <td></td>
                        </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="row">
        <label>Track</label>
        <hr />
        @if (yoyoService.Athletes.Any())
        {
            <table class="table">
                @foreach (var athlete in yoyoService.Athletes)
                {
                    <tr>
                        <td><label>@string.Format("{0}. {1}", athlete.Id, athlete.Name)</label></td>
                        <td>
                            @if (yoyoService.IsProcessStarted && !athlete.IsStopped)
                            {
                                <label class="yoyo-warn" @onclick="@(e => yoyoService.Warn(athlete))">@athlete.WarnText</label>
                                <label class="yoyo-danger" @onclick="@(e => yoyoService.Stop(athlete))">Stop</label>
                            }
                            else if(yoyoService.IsProcessStarted && athlete.IsStopped)
                            {
                                <label>@athlete.Level/@athlete.Shuttle</label>
                            }
                        </td>
                    </tr>
                }
            </table>
        }
    </div>
</div>








<style>
    label.yoyo-warn {
        background-color: gray;
        color: white;
        padding: 0px 10px;
        border-radius: 28%;
        outline: none;
        border: none;
    }

    label.yoyo-danger {
        background-color: red;
        color: white;
        padding: 0px 10px;
        border-radius: 28%;
        outline: none;
        border: none;
    }

    div.athlete-div-margin {
        border-right: 1px solid gray;
        border-left: 1px solid gray;
        margin-bottom: 7px;
    }

    div.athletee-entry {
        border-bottom: 1px solid #a0a0a0;
        margin: 5px;
    }

    .athlete-div-play-continer {
        margin: auto;
    }

    .athlete-img-play {
        width: 180px;
    }

    .athlete-table-with-header {
        text-align: center;
        border: none;
    }

        .athlete-table-with-header td {
            border-top: none !important;
            border-collapse: collapse;
        }

    .athlete-add-border-rl {
        border-right: 1px solid #ccc;
        border-left: 1px solid #ccc;
    }

    #svg circle {
        stroke-dashoffset: 0;
        transition: stroke-dashoffset 1s linear;
        stroke: #666;
        stroke-width: 1em;
    }

    #svg #bar {
        stroke: #b75819;
    }

    #cont {
        display: block;
        height: 200px;
        width: 200px;
        margin: 2em auto;
        /*box-shadow: 0 0 1em black;*/
        border-radius: 100%;
        position: relative;
    }

        #cont:after {
            position: absolute;
            display: block;
            height: 160px;
            width: 160px;
            left: 50%;
            top: 50%;
            /*box-shadow: inset 0 0 1em black;*/
            margin-top: -80px;
            margin-left: -80px;
            border-radius: 100%;
            line-height: 160px;
            font-size: 2em;
            /*text-shadow: 0 0 0.5em black;*/
        }
</style>